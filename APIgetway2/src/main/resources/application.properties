# Disable Spring Cloud Compatibility Verifier
spring.cloud.compatibility-verifier.enabled=false

# Spring Cloud Gateway Routes Configuration
spring.cloud.gateway.routes[0].id=dashboardsModule
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:8099
spring.cloud.gateway.routes[0].predicates[0]=Path=/dashboards/**
spring.cloud.gateway.routes[1].id=chartsModule
spring.cloud.gateway.routes[1].uri=http://127.0.0.1:8099
spring.cloud.gateway.routes[1].predicates[0]=Path=/charts/**
spring.cloud.gateway.routes[2].id=datasourcesModule
spring.cloud.gateway.routes[2].uri=http://127.0.0.1:8099
spring.cloud.gateway.routes[2].predicates[0]=Path=/datasources/**
spring.cloud.gateway.routes[3].id=portletsModule
spring.cloud.gateway.routes[3].uri=http://127.0.0.1:8099
spring.cloud.gateway.routes[3].predicates[0]=Path=/portlets/**
spring.cloud.gateway.routes[4].id=user2Module
spring.cloud.gateway.routes[4].uri=http://127.0.0.1:8098
spring.cloud.gateway.routes[4].predicates[0]=Path=/user2/**
spring.cloud.gateway.routes[5].id=authModule
spring.cloud.gateway.routes[5].uri=http://127.0.0.1:8098
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[6].id=testModule
spring.cloud.gateway.routes[6].uri=http://127.0.0.1:8098
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/test/**
spring.cloud.gateway.routes[7].id=angular
spring.cloud.gateway.routes[7].uri=http://127.0.0.1:4200
spring.cloud.gateway.routes[7].predicates[0]=Path=/**

# CORS Configuration
spring.webflux.webclient.base-url=http://localhost:4200
spring.webflux.cors.url=/api
spring.webflux.cors.config=GET, PUT, POST, DELETE

# Resilience4j CircuitBreaker Configuration
resilience4j.circuitbreaker.instances.backendA.register-health-indicator=true
resilience4j.circuitbreaker.instances.backendA.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.backendA.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.backendA.slow-call-duration-threshold=60000
resilience4j.circuitbreaker.instances.backendA.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.backendA.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.backendA.sliding-window-size=5
resilience4j.circuitbreaker.instances.backendA.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.backendA.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.instances.backendA.automatic-transition-from-open-to-half-open-enabled=true

# Resilience4j Retry Configuration
resilience4j.retry.instances.backendA.max-retry-attempts=3
resilience4j.retry.instances.backendA.wait-duration=5000
resilience4j.retry.instances.backendA.retry-exceptions=java.io.IOException,java.util.concurrent.TimeoutException
spring.main.web-application-type=reactive
# Other Spring Boot Properties
server.port=8080
app.user2=http://localhost:8098
app.Stage6=http://localhost:8099
app.angular=http://127.0.0.1:4200
spring.application.name=APIgateway
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka